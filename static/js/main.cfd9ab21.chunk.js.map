{"version":3,"sources":["App.js","index.js"],"names":["marked","require","App","useState","text","setText","useEffect","className","id","onChange","e","target","value","handleChange","placeholder","dangerouslySetInnerHTML","__html","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMACMA,EAASC,EAAQ,IAgDRC,MA5Cf,WAEE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAUA,OARAC,qBAAU,WACRD,EAPgB,u5BAQf,IAOD,sBAAKE,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,sDAEF,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,aAAf,UACE,wBAAQA,UAAU,gBAAlB,SACE,4CAEF,0BACEA,UAAU,SACVC,GAAG,SACHC,SAAU,SAACC,GAAD,OAjBC,SAACA,GACpBL,EAAQK,EAAEC,OAAOC,OAgBQC,CAAaH,IAC9BI,YAAY,yBACZF,MAAOR,OAGX,sBAAKG,UAAU,cAAf,UACE,wBAAQA,UAAU,iBAAlB,SACE,2CAEF,qBACEA,UAAU,UACVQ,wBAAyB,CAAEC,OAAQhB,EAAOI,gBCnCtDa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.cfd9ab21.chunk.js","sourcesContent":["import { useState, useEffect} from 'react'\nconst marked = require(\"marked\")\n\nconst initialText = \"# Header \\n## Subheader \\n### Sub-subheader \\n\\nIn-line code, `<div></div>`, between 2 backticks. \\n\\n``` \\n// this is a code block: \\nfunction anotherExample(firstLine, lastLine) { \\n  if (firstLine == '```' && lastLine == '```') {\\n     return multiLineCode;\\n  }\\n}\\n```\\n\\nYou can also make text **bold**... whoa!\\nOr _italic_.\\nOr... wait for it... **_both!_**\\nAnd feel free to go crazy ~~crossing stuff out~~.\\nThere's also [links](https://www.freecodecamp.com), and\\n> Block Quotes!\\n\\n- And of course there are lists.\\n  - Some are bulleted.\\n    - With different indentation levels.\\n      - That look like this.\\n1. And there are numbered lists too.\\n1. Use just 1s if you want!\\n1. And last but not least, let's not forget embedded images:\\n\\n![React Logo w/ Text](https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse1.mm.bing.net%2Fth%3Fid%3DOIP.ZmV_XcNHA9rOtiy4DPL31AAAAA%26pid%3DApi&f=1)\"\n\nfunction App() {\n\n  const [text, setText] = useState('')\n  \n  useEffect(() => {\n    setText(initialText)\n  }, [])\n\n  const handleChange = (e) => {\n    setText(e.target.value)\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"header-top\">\n        <h2>Markdown Previewer</h2>\n      </header>\n      <div className=\"main\">\n        <div className=\"editor-div\">\n          <header className=\"header-editor\">\n            <h2>Markdown</h2>\n          </header>\n          <textarea\n            className=\"editor\"\n            id=\"editor\"\n            onChange={(e) => handleChange(e)}\n            placeholder=\"Enter markdown here...\"\n            value={text}\n          ></textarea>\n        </div>\n        <div className=\"preview-div\">\n          <header className=\"header-preview\">\n            <h2>Preview</h2>\n          </header>\n          <div\n            className=\"preview\"\n            dangerouslySetInnerHTML={{ __html: marked(text) }}\n          ></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}